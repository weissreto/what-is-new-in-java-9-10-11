package whatisnewin.jdk.javadoc.doclet;

import jdk.javadoc.doclet.Doclet.Option;
import jdk.javadoc.doclet.Doclet.Option.Kind;
import java.util.List;

/**
 * This source file was generated by WhatIsNewInJava.<br>
 *
 * This class provides an example call to each method in class {@link Option}
 * that were newly introduced in Java versions 9, 10, 11.<br>
 *
 * {@link Option} is a completely new class.
 * @since 9
 * @see Option
 */
public final class WhatIsNewInDoclet$Option
{
  /**
   * Example call to new method {@link Option#getArgumentCount()}.
   * @since 9
   * @see Option#getArgumentCount()
   */
  public int getArgumentCount()
  {
    Option testee = $$$();

    int result = testee.getArgumentCount();
    return result;
  }

  /**
   * Example call to new method {@link Option#getDescription()}.
   * @since 9
   * @see Option#getDescription()
   */
  public String getDescription()
  {
    Option testee = $$$();

    String result = testee.getDescription();
    return result;
  }

  /**
   * Example call to new method {@link Option#getKind()}.
   * @since 9
   * @see Option#getKind()
   */
  public Kind getKind()
  {
    Option testee = $$$();

    Kind result = testee.getKind();
    return result;
  }

  /**
   * Example call to new method {@link Option#getNames()}.
   * @since 9
   * @see Option#getNames()
   */
  public List<String> getNames()
  {
    Option testee = $$$();

    List<String> result = testee.getNames();
    return result;
  }

  /**
   * Example call to new method {@link Option#getParameters()}.
   * @since 9
   * @see Option#getParameters()
   */
  public String getParameters()
  {
    Option testee = $$$();

    String result = testee.getParameters();
    return result;
  }

  /**
   * Example call to new method {@link Option#process(String, List)}.
   * @since 9
   * @see Option#process(String, List)
   */
  public boolean process(String option, List<String> arguments)
  {
    Option testee = $$$();

    boolean result = testee.process(option, arguments);
    return result;
  }

  private Option $$$()
  {
    return null;
  }
}
