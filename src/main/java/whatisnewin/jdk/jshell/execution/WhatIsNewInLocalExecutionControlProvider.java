package whatisnewin.jdk.jshell.execution;

import jdk.jshell.execution.LocalExecutionControlProvider;
import jdk.jshell.spi.ExecutionControl;
import jdk.jshell.spi.ExecutionEnv;
import java.util.Map;

/**
 * This source file was generated by WhatIsNewInJava<br>
 *
 * This class provides an example call to each method in class {@link LocalExecutionControlProvider}
 * that were newly introduced in Java versions 9, 10, 11.<br>
 *
 * {@link LocalExecutionControlProvider} is a completely new class
 * @since 9
 * @see LocalExecutionControlProvider
 */
public final class WhatIsNewInLocalExecutionControlProvider
{
  /**
   * Example call to new constructor {@link LocalExecutionControlProvider#LocalExecutionControlProvider}
   * @since 9
   * @see LocalExecutionControlProvider#LocalExecutionControlProvider
   */
  public WhatIsNewInLocalExecutionControlProvider()
  {
    LocalExecutionControlProvider testee = new LocalExecutionControlProvider();
  }

  /**
   * Example call to new method {@link LocalExecutionControlProvider#generate}
   * @since 9
   * @see LocalExecutionControlProvider#generate
   */
  public ExecutionControl generate(ExecutionEnv env, Map<String, String> parameters)
  {
    LocalExecutionControlProvider testee = $$$();

    ExecutionControl result = testee.generate(env, parameters);
    return result;
  }

  /**
   * Example call to new method {@link LocalExecutionControlProvider#name}
   * @since 9
   * @see LocalExecutionControlProvider#name
   */
  public String name()
  {
    LocalExecutionControlProvider testee = $$$();

    String result = testee.name();
    return result;
  }

  /**
   * Example call to new method {@link LocalExecutionControlProvider#defaultParameters}
   * @since 9
   * @see LocalExecutionControlProvider#defaultParameters
   */
  public Map<String, String> defaultParameters()
  {
    LocalExecutionControlProvider testee = $$$();

    Map<String, String> result = testee.defaultParameters();
    return result;
  }

  private LocalExecutionControlProvider $$$()
  {
    return null;
  }
}
