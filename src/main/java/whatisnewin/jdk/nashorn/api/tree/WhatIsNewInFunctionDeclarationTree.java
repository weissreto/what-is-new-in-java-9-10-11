package whatisnewin.jdk.nashorn.api.tree;

import jdk.nashorn.api.tree.FunctionDeclarationTree;
import jdk.nashorn.api.tree.IdentifierTree;
import java.util.List;
import jdk.nashorn.api.tree.ExpressionTree;
import jdk.nashorn.api.tree.BlockTree;

/**
 * This source file was generated by WhatIsNewInJava.<br>
 *
 * This class provides an example call to each method in class {@link FunctionDeclarationTree}
 * that were newly introduced in Java versions 9, 10, 11.<br>
 *
 * {@link FunctionDeclarationTree} is a completely new class.
 * @since 9
 * @see FunctionDeclarationTree
 */
public final class WhatIsNewInFunctionDeclarationTree
{
  /**
   * Example call to new method {@link FunctionDeclarationTree#getName()}.
   * @since 9
   * @see FunctionDeclarationTree#getName()
   */
  public IdentifierTree getName()
  {
    FunctionDeclarationTree testee = $$$();

    IdentifierTree result = testee.getName();
    return result;
  }

  /**
   * Example call to new method {@link FunctionDeclarationTree#getParameters()}.
   * @since 9
   * @see FunctionDeclarationTree#getParameters()
   */
  public List<? extends ExpressionTree> getParameters()
  {
    FunctionDeclarationTree testee = $$$();

    List<? extends ExpressionTree> result = testee.getParameters();
    return result;
  }

  /**
   * Example call to new method {@link FunctionDeclarationTree#getBody()}.
   * @since 9
   * @see FunctionDeclarationTree#getBody()
   */
  public BlockTree getBody()
  {
    FunctionDeclarationTree testee = $$$();

    BlockTree result = testee.getBody();
    return result;
  }

  /**
   * Example call to new method {@link FunctionDeclarationTree#isStrict()}.
   * @since 9
   * @see FunctionDeclarationTree#isStrict()
   */
  public boolean isStrict()
  {
    FunctionDeclarationTree testee = $$$();

    boolean result = testee.isStrict();
    return result;
  }

  /**
   * Example call to new method {@link FunctionDeclarationTree#isGenerator()}.
   * @since 9
   * @see FunctionDeclarationTree#isGenerator()
   */
  public boolean isGenerator()
  {
    FunctionDeclarationTree testee = $$$();

    boolean result = testee.isGenerator();
    return result;
  }

  private FunctionDeclarationTree $$$()
  {
    return null;
  }
}
