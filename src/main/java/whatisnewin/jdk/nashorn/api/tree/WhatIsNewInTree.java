package whatisnewin.jdk.nashorn.api.tree;

import jdk.nashorn.api.tree.Tree;
import jdk.nashorn.api.tree.Tree.Kind;
import jdk.nashorn.api.tree.TreeVisitor;

/**
 * This source file was generated by WhatIsNewInJava.<br>
 *
 * This class provides an example call to each method in class {@link Tree}
 * that were newly introduced in Java versions 9, 10, 11.<br>
 *
 * {@link Tree} is a completely new class.
 * @since 9
 * @see Tree
 */
public final class WhatIsNewInTree
{
  /**
   * Example call to new method {@link Tree#getStartPosition()}.
   * @since 9
   * @see Tree#getStartPosition()
   */
  public long getStartPosition()
  {
    Tree testee = $$$();

    long result = testee.getStartPosition();
    return result;
  }

  /**
   * Example call to new method {@link Tree#getEndPosition()}.
   * @since 9
   * @see Tree#getEndPosition()
   */
  public long getEndPosition()
  {
    Tree testee = $$$();

    long result = testee.getEndPosition();
    return result;
  }

  /**
   * Example call to new method {@link Tree#getKind()}.
   * @since 9
   * @see Tree#getKind()
   */
  public Kind getKind()
  {
    Tree testee = $$$();

    Kind result = testee.getKind();
    return result;
  }

  /**
   * Example call to new method {@link Tree#accept(TreeVisitor, Object)}.
   * @since 9
   * @see Tree#accept(TreeVisitor, Object)
   */
  public <R, D> R accept(TreeVisitor<R, D> visitor, D data)
  {
    Tree testee = $$$();

    R result = testee.accept(visitor, data);
    return result;
  }

  private Tree $$$()
  {
    return null;
  }
}
