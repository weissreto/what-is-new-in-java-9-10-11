package whatisnewin.jdk.nashorn.api.tree;

import jdk.nashorn.api.tree.PropertyTree;
import jdk.nashorn.api.tree.ExpressionTree;
import jdk.nashorn.api.tree.FunctionExpressionTree;

/**
 * This source file was generated by WhatIsNewInJava<br>
 *
 * This class provides an example call to each method in class {@link PropertyTree}
 * that were newly introduced in Java versions 9, 10, 11.<br>
 *
 * {@link PropertyTree} is a completely new class
 * @since 9
 * @see PropertyTree
 */
public final class WhatIsNewInPropertyTree
{
  /**
   * Example call to new method {@link PropertyTree#getKey}
   * @since 9
   * @see PropertyTree#getKey
   */
  public ExpressionTree getKey()
  {
    PropertyTree testee = $$$();

    ExpressionTree result = testee.getKey();
    return result;
  }

  /**
   * Example call to new method {@link PropertyTree#getValue}
   * @since 9
   * @see PropertyTree#getValue
   */
  public ExpressionTree getValue()
  {
    PropertyTree testee = $$$();

    ExpressionTree result = testee.getValue();
    return result;
  }

  /**
   * Example call to new method {@link PropertyTree#getGetter}
   * @since 9
   * @see PropertyTree#getGetter
   */
  public FunctionExpressionTree getGetter()
  {
    PropertyTree testee = $$$();

    FunctionExpressionTree result = testee.getGetter();
    return result;
  }

  /**
   * Example call to new method {@link PropertyTree#isStatic}
   * @since 9
   * @see PropertyTree#isStatic
   */
  public boolean isStatic()
  {
    PropertyTree testee = $$$();

    boolean result = testee.isStatic();
    return result;
  }

  /**
   * Example call to new method {@link PropertyTree#isComputed}
   * @since 9
   * @see PropertyTree#isComputed
   */
  public boolean isComputed()
  {
    PropertyTree testee = $$$();

    boolean result = testee.isComputed();
    return result;
  }

  /**
   * Example call to new method {@link PropertyTree#getSetter}
   * @since 9
   * @see PropertyTree#getSetter
   */
  public FunctionExpressionTree getSetter()
  {
    PropertyTree testee = $$$();

    FunctionExpressionTree result = testee.getSetter();
    return result;
  }

  private PropertyTree $$$()
  {
    return null;
  }
}
