package whatisnewin.javax.net.ssl;

import javax.net.ssl.SSLSocket;
import java.util.function.BiFunction;
import java.util.List;

/**
 * This source file was generated by WhatIsNewInJava.<br>
 *
 * This class provides an example call to each method in class {@link SSLSocket}
 * that were newly introduced in Java versions 9, 10, 11.<br>
 *
 * {@link SSLSocket} is an old class but has new fields, constructors or methods.
 * @since 1.4
 * @see SSLSocket
 */
public final class WhatIsNewInSSLSocket
{
  /**
   * Example call to new method {@link SSLSocket#getApplicationProtocol()}.
   * @since 9
   * @see SSLSocket#getApplicationProtocol()
   */
  public String getApplicationProtocol()
  {
    SSLSocket testee = $$$();

    String result = testee.getApplicationProtocol();
    return result;
  }

  /**
   * Example call to new method {@link SSLSocket#getHandshakeApplicationProtocol()}.
   * @since 9
   * @see SSLSocket#getHandshakeApplicationProtocol()
   */
  public String getHandshakeApplicationProtocol()
  {
    SSLSocket testee = $$$();

    String result = testee.getHandshakeApplicationProtocol();
    return result;
  }

  /**
   * Example call to new method {@link SSLSocket#setHandshakeApplicationProtocolSelector(BiFunction)}.
   * @since 9
   * @see SSLSocket#setHandshakeApplicationProtocolSelector(BiFunction)
   */
  public void setHandshakeApplicationProtocolSelector(BiFunction<SSLSocket, List<String>, String> selector)
  {
    SSLSocket testee = $$$();

    testee.setHandshakeApplicationProtocolSelector(selector);
  }

  /**
   * Example call to new method {@link SSLSocket#getHandshakeApplicationProtocolSelector()}.
   * @since 9
   * @see SSLSocket#getHandshakeApplicationProtocolSelector()
   */
  public BiFunction<SSLSocket, List<String>, String> getHandshakeApplicationProtocolSelector()
  {
    SSLSocket testee = $$$();

    BiFunction<SSLSocket, List<String>, String> result = testee.getHandshakeApplicationProtocolSelector();
    return result;
  }

  private SSLSocket $$$()
  {
    return null;
  }
}
