package whatisnewin.javax.net.ssl;

import javax.net.ssl.SSLParameters;

/**
 * This source file was generated by WhatIsNewInJava.<br>
 *
 * This class provides an example call to each method in class {@link SSLParameters}
 * that were newly introduced in Java versions 9, 10, 11.<br>
 *
 * {@link SSLParameters} is an old class but has new fields, constructors or methods.
 * @since 1.6
 * @see SSLParameters
 */
public final class WhatIsNewInSSLParameters
{
  /**
   * Example call to new method {@link SSLParameters#setEnableRetransmissions(boolean)}.
   * @since 9
   * @see SSLParameters#setEnableRetransmissions(boolean)
   */
  public void setEnableRetransmissions(boolean enableRetransmissions)
  {
    SSLParameters testee = $$$();

    testee.setEnableRetransmissions(enableRetransmissions);
  }

  /**
   * Example call to new method {@link SSLParameters#getEnableRetransmissions()}.
   * @since 9
   * @see SSLParameters#getEnableRetransmissions()
   */
  public boolean getEnableRetransmissions()
  {
    SSLParameters testee = $$$();

    boolean result = testee.getEnableRetransmissions();
    return result;
  }

  /**
   * Example call to new method {@link SSLParameters#getMaximumPacketSize()}.
   * @since 9
   * @see SSLParameters#getMaximumPacketSize()
   */
  public int getMaximumPacketSize()
  {
    SSLParameters testee = $$$();

    int result = testee.getMaximumPacketSize();
    return result;
  }

  /**
   * Example call to new method {@link SSLParameters#setMaximumPacketSize(int)}.
   * @since 9
   * @see SSLParameters#setMaximumPacketSize(int)
   */
  public void setMaximumPacketSize(int maximumPacketSize)
  {
    SSLParameters testee = $$$();

    testee.setMaximumPacketSize(maximumPacketSize);
  }

  /**
   * Example call to new method {@link SSLParameters#getApplicationProtocols()}.
   * @since 9
   * @see SSLParameters#getApplicationProtocols()
   */
  public String[] getApplicationProtocols()
  {
    SSLParameters testee = $$$();

    String[] result = testee.getApplicationProtocols();
    return result;
  }

  private SSLParameters $$$()
  {
    return null;
  }
}
