package whatisnewin.javax.lang.model.element;

import javax.lang.model.element.ModuleElement.Directive;
import javax.lang.model.element.ModuleElement.DirectiveKind;
import javax.lang.model.element.ModuleElement.DirectiveVisitor;

/**
 * This source file was generated by WhatIsNewInJava<br>
 *
 * This class provides an example call to each method in class {@link Directive}
 * that were newly introduced in Java versions 9, 10, 11.<br>
 *
 * {@link Directive} is a completely new class
 * @since 9
 * @see Directive
 */
public final class WhatIsNewInModuleElement$Directive
{
  /**
   * Example call to new method {@link Directive#getKind}
   * @since 9
   * @see Directive#getKind
   */
  public DirectiveKind getKind()
  {
    Directive testee = $$$();

    DirectiveKind result = testee.getKind();
    return result;
  }

  /**
   * Example call to new method {@link Directive#accept}
   * @since 9
   * @see Directive#accept
   */
  public <R, P> R accept(DirectiveVisitor<R, P> v, P p)
  {
    Directive testee = $$$();

    R result = testee.accept(v, p);
    return result;
  }

  private Directive $$$()
  {
    return null;
  }
}
