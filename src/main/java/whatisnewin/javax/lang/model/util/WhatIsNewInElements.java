package whatisnewin.javax.lang.model.util;

import javax.lang.model.util.Elements;
import javax.lang.model.element.PackageElement;
import javax.lang.model.element.ModuleElement;
import java.util.Set;
import javax.lang.model.element.TypeElement;
import javax.lang.model.util.Elements.Origin;
import javax.lang.model.element.Element;
import javax.lang.model.AnnotatedConstruct;
import javax.lang.model.element.AnnotationMirror;
import javax.lang.model.element.ModuleElement.Directive;
import javax.lang.model.element.ExecutableElement;

/**
 * This source file was generated by WhatIsNewInJava.<br>
 *
 * This class provides an example call to each method in class {@link Elements}
 * that were newly introduced in Java versions 9, 10, 11.<br>
 *
 * {@link Elements} is an old class but has new fields, constructors or methods.
 * @since 1.6
 * @see Elements
 */
public final class WhatIsNewInElements
{
  /**
   * Example call to new method {@link Elements#getPackageElement(ModuleElement, CharSequence)}.
   * @since 9
   * @see Elements#getPackageElement(ModuleElement, CharSequence)
   */
  public PackageElement getPackageElement(ModuleElement module, CharSequence name)
  {
    Elements testee = $$$();

    PackageElement result = testee.getPackageElement(module, name);
    return result;
  }

  /**
   * Example call to new method {@link Elements#getAllPackageElements(CharSequence)}.
   * @since 9
   * @see Elements#getAllPackageElements(CharSequence)
   */
  public Set<? extends PackageElement> getAllPackageElements(CharSequence name)
  {
    Elements testee = $$$();

    Set<? extends PackageElement> result = testee.getAllPackageElements(name);
    return result;
  }

  /**
   * Example call to new method {@link Elements#getTypeElement(ModuleElement, CharSequence)}.
   * @since 9
   * @see Elements#getTypeElement(ModuleElement, CharSequence)
   */
  public TypeElement getTypeElement(ModuleElement module, CharSequence name)
  {
    Elements testee = $$$();

    TypeElement result = testee.getTypeElement(module, name);
    return result;
  }

  /**
   * Example call to new method {@link Elements#getAllTypeElements(CharSequence)}.
   * @since 9
   * @see Elements#getAllTypeElements(CharSequence)
   */
  public Set<? extends TypeElement> getAllTypeElements(CharSequence name)
  {
    Elements testee = $$$();

    Set<? extends TypeElement> result = testee.getAllTypeElements(name);
    return result;
  }

  /**
   * Example call to new method {@link Elements#getModuleElement(CharSequence)}.
   * @since 9
   * @see Elements#getModuleElement(CharSequence)
   */
  public ModuleElement getModuleElement(CharSequence name)
  {
    Elements testee = $$$();

    ModuleElement result = testee.getModuleElement(name);
    return result;
  }

  /**
   * Example call to new method {@link Elements#getAllModuleElements()}.
   * @since 9
   * @see Elements#getAllModuleElements()
   */
  public Set<? extends ModuleElement> getAllModuleElements()
  {
    Elements testee = $$$();

    Set<? extends ModuleElement> result = testee.getAllModuleElements();
    return result;
  }

  /**
   * Example call to new method {@link Elements#getOrigin(Element)}.
   * @since 9
   * @see Elements#getOrigin(Element)
   */
  public Origin getOrigin(Element e)
  {
    Elements testee = $$$();

    Origin result = testee.getOrigin(e);
    return result;
  }

  /**
   * Example call to new method {@link Elements#getOrigin(AnnotatedConstruct, AnnotationMirror)}.
   * @since 9
   * @see Elements#getOrigin(AnnotatedConstruct, AnnotationMirror)
   */
  public Origin getOrigin(AnnotatedConstruct c, AnnotationMirror a)
  {
    Elements testee = $$$();

    Origin result = testee.getOrigin(c, a);
    return result;
  }

  /**
   * Example call to new method {@link Elements#getOrigin(ModuleElement, Directive)}.
   * @since 9
   * @see Elements#getOrigin(ModuleElement, Directive)
   */
  public Origin getOrigin(ModuleElement m, Directive directive)
  {
    Elements testee = $$$();

    Origin result = testee.getOrigin(m, directive);
    return result;
  }

  /**
   * Example call to new method {@link Elements#isBridge(ExecutableElement)}.
   * @since 9
   * @see Elements#isBridge(ExecutableElement)
   */
  public boolean isBridge(ExecutableElement e)
  {
    Elements testee = $$$();

    boolean result = testee.isBridge(e);
    return result;
  }

  /**
   * Example call to new method {@link Elements#getModuleOf(Element)}.
   * @since 9
   * @see Elements#getModuleOf(Element)
   */
  public ModuleElement getModuleOf(Element e)
  {
    Elements testee = $$$();

    ModuleElement result = testee.getModuleOf(e);
    return result;
  }

  private Elements $$$()
  {
    return null;
  }
}
