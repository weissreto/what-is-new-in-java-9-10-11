package whatisnewin.javax.security.auth.kerberos;

import javax.security.auth.kerberos.EncryptionKey;
import javax.security.auth.DestroyFailedException;

/**
 * This source file was generated by WhatIsNewInJava.<br>
 *
 * This class provides an example call to each method in class {@link EncryptionKey}
 * that were newly introduced in Java versions 9, 10, 11.<br>
 *
 * {@link EncryptionKey} is a completely new class.
 * @since 9
 * @see EncryptionKey
 */
public final class WhatIsNewInEncryptionKey
{
  /**
   * Example call to new constructor {@link EncryptionKey#EncryptionKey(byte[], int)}.
   * @since 9
   * @see EncryptionKey#EncryptionKey(byte[], int)
   */
  public WhatIsNewInEncryptionKey(byte[] keyBytes, int keyType)
  {
    EncryptionKey testee = new EncryptionKey(keyBytes, keyType);
  }

  /**
   * Example call to new method {@link EncryptionKey#getAlgorithm()}.
   * @since 9
   * @see EncryptionKey#getAlgorithm()
   */
  public String getAlgorithm()
  {
    EncryptionKey testee = $$$();

    String result = testee.getAlgorithm();
    return result;
  }

  /**
   * Example call to new method {@link EncryptionKey#getEncoded()}.
   * @since 9
   * @see EncryptionKey#getEncoded()
   */
  public byte[] getEncoded()
  {
    EncryptionKey testee = $$$();

    byte[] result = testee.getEncoded();
    return result;
  }

  /**
   * Example call to new method {@link EncryptionKey#getKeyType()}.
   * @since 9
   * @see EncryptionKey#getKeyType()
   */
  public int getKeyType()
  {
    EncryptionKey testee = $$$();

    int result = testee.getKeyType();
    return result;
  }

  /**
   * Example call to new method {@link EncryptionKey#destroy()}.
   * @since 9
   * @see EncryptionKey#destroy()
   */
  public void destroy() throws DestroyFailedException
  {
    EncryptionKey testee = $$$();

    testee.destroy();
  }

  /**
   * Example call to new method {@link EncryptionKey#getFormat()}.
   * @since 9
   * @see EncryptionKey#getFormat()
   */
  public String getFormat()
  {
    EncryptionKey testee = $$$();

    String result = testee.getFormat();
    return result;
  }

  private EncryptionKey $$$()
  {
    return null;
  }
}
