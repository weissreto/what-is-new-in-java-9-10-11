package whatisnewin.javax.security.auth.kerberos;

import javax.security.auth.kerberos.KerberosCredMessage;
import javax.security.auth.kerberos.KerberosPrincipal;

/**
 * This source file was generated by WhatIsNewInJava.<br>
 *
 * This class provides an example call to each method in class {@link KerberosCredMessage}
 * that were newly introduced in Java versions 9, 10, 11.<br>
 *
 * {@link KerberosCredMessage} is a completely new class.
 * @since 9
 * @see KerberosCredMessage
 */
public final class WhatIsNewInKerberosCredMessage
{
  /**
   * Example call to new constructor {@link KerberosCredMessage#KerberosCredMessage(KerberosPrincipal, KerberosPrincipal, byte[])}.
   * @since 9
   * @see KerberosCredMessage#KerberosCredMessage(KerberosPrincipal, KerberosPrincipal, byte[])
   */
  public WhatIsNewInKerberosCredMessage(KerberosPrincipal sender, KerberosPrincipal recipient, byte[] message)
  {
    KerberosCredMessage testee = new KerberosCredMessage(sender, recipient, message);
  }

  /**
   * Example call to new method {@link KerberosCredMessage#getSender()}.
   * @since 9
   * @see KerberosCredMessage#getSender()
   */
  public KerberosPrincipal getSender()
  {
    KerberosCredMessage testee = $$$();

    KerberosPrincipal result = testee.getSender();
    return result;
  }

  /**
   * Example call to new method {@link KerberosCredMessage#getRecipient()}.
   * @since 9
   * @see KerberosCredMessage#getRecipient()
   */
  public KerberosPrincipal getRecipient()
  {
    KerberosCredMessage testee = $$$();

    KerberosPrincipal result = testee.getRecipient();
    return result;
  }

  /**
   * Example call to new method {@link KerberosCredMessage#getEncoded()}.
   * @since 9
   * @see KerberosCredMessage#getEncoded()
   */
  public byte[] getEncoded()
  {
    KerberosCredMessage testee = $$$();

    byte[] result = testee.getEncoded();
    return result;
  }

  /**
   * Example call to new method {@link KerberosCredMessage#destroy()}.
   * @since 9
   * @see KerberosCredMessage#destroy()
   */
  public void destroy()
  {
    KerberosCredMessage testee = $$$();

    testee.destroy();
  }

  private KerberosCredMessage $$$()
  {
    return null;
  }
}
