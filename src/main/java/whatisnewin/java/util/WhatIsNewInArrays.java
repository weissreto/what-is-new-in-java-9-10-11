package whatisnewin.java.util;

import java.util.Arrays;
import java.util.Comparator;

/**
 * This source file was generated by WhatIsNewInJava<br>
 *
 * This class provides an example call to each method in class {@link Arrays}
 * that were newly introduced in Java versions 9, 10, 11.<br>
 *
 * {@link Arrays} is an old class but has new fields, constructors or methods
 * @since 1.2
 * @see Arrays
 */
public final class WhatIsNewInArrays
{
  /**
   * Example call to new method {@link Arrays#compareUnsigned}
   * @since 9
   * @see Arrays#compareUnsigned
   */
  public static int compareUnsigned(byte[] a, byte[] b)
  {
    int result = Arrays.compareUnsigned(a, b);
    return result;
  }

  /**
   * Example call to new method {@link Arrays#compareUnsigned}
   * @since 9
   * @see Arrays#compareUnsigned
   */
  public static int compareUnsigned(byte[] a, int aFromIndex, int aToIndex, byte[] b, int bFromIndex, int bToIndex)
  {
    int result = Arrays.compareUnsigned(a, aFromIndex, aToIndex, b, bFromIndex, bToIndex);
    return result;
  }

  /**
   * Example call to new method {@link Arrays#compareUnsigned}
   * @since 9
   * @see Arrays#compareUnsigned
   */
  public static int compareUnsigned(short[] a, short[] b)
  {
    int result = Arrays.compareUnsigned(a, b);
    return result;
  }

  /**
   * Example call to new method {@link Arrays#compareUnsigned}
   * @since 9
   * @see Arrays#compareUnsigned
   */
  public static int compareUnsigned(short[] a, int aFromIndex, int aToIndex, short[] b, int bFromIndex, int bToIndex)
  {
    int result = Arrays.compareUnsigned(a, aFromIndex, aToIndex, b, bFromIndex, bToIndex);
    return result;
  }

  /**
   * Example call to new method {@link Arrays#compareUnsigned}
   * @since 9
   * @see Arrays#compareUnsigned
   */
  public static int compareUnsigned(int[] a, int[] b)
  {
    int result = Arrays.compareUnsigned(a, b);
    return result;
  }

  /**
   * Example call to new method {@link Arrays#compareUnsigned}
   * @since 9
   * @see Arrays#compareUnsigned
   */
  public static int compareUnsigned(int[] a, int aFromIndex, int aToIndex, int[] b, int bFromIndex, int bToIndex)
  {
    int result = Arrays.compareUnsigned(a, aFromIndex, aToIndex, b, bFromIndex, bToIndex);
    return result;
  }

  /**
   * Example call to new method {@link Arrays#compareUnsigned}
   * @since 9
   * @see Arrays#compareUnsigned
   */
  public static int compareUnsigned(long[] a, long[] b)
  {
    int result = Arrays.compareUnsigned(a, b);
    return result;
  }

  /**
   * Example call to new method {@link Arrays#compareUnsigned}
   * @since 9
   * @see Arrays#compareUnsigned
   */
  public static int compareUnsigned(long[] a, int aFromIndex, int aToIndex, long[] b, int bFromIndex, int bToIndex)
  {
    int result = Arrays.compareUnsigned(a, aFromIndex, aToIndex, b, bFromIndex, bToIndex);
    return result;
  }

  /**
   * Example call to new method {@link Arrays#compare}
   * @since 9
   * @see Arrays#compare
   */
  public static int compare(char[] a, char[] b)
  {
    int result = Arrays.compare(a, b);
    return result;
  }

  /**
   * Example call to new method {@link Arrays#compare}
   * @since 9
   * @see Arrays#compare
   */
  public static int compare(byte[] a, byte[] b)
  {
    int result = Arrays.compare(a, b);
    return result;
  }

  /**
   * Example call to new method {@link Arrays#compare}
   * @since 9
   * @see Arrays#compare
   */
  public static int compare(boolean[] a, boolean[] b)
  {
    int result = Arrays.compare(a, b);
    return result;
  }

  /**
   * Example call to new method {@link Arrays#compare}
   * @since 9
   * @see Arrays#compare
   */
  public static int compare(int[] a, int aFromIndex, int aToIndex, int[] b, int bFromIndex, int bToIndex)
  {
    int result = Arrays.compare(a, aFromIndex, aToIndex, b, bFromIndex, bToIndex);
    return result;
  }

  /**
   * Example call to new method {@link Arrays#compare}
   * @since 9
   * @see Arrays#compare
   */
  public static int compare(long[] a, long[] b)
  {
    int result = Arrays.compare(a, b);
    return result;
  }

  /**
   * Example call to new method {@link Arrays#compare}
   * @since 9
   * @see Arrays#compare
   */
  public static int compare(boolean[] a, int aFromIndex, int aToIndex, boolean[] b, int bFromIndex, int bToIndex)
  {
    int result = Arrays.compare(a, aFromIndex, aToIndex, b, bFromIndex, bToIndex);
    return result;
  }

  /**
   * Example call to new method {@link Arrays#compare}
   * @since 9
   * @see Arrays#compare
   */
  public static int compare(byte[] a, int aFromIndex, int aToIndex, byte[] b, int bFromIndex, int bToIndex)
  {
    int result = Arrays.compare(a, aFromIndex, aToIndex, b, bFromIndex, bToIndex);
    return result;
  }

  /**
   * Example call to new method {@link Arrays#compare}
   * @since 9
   * @see Arrays#compare
   */
  public static int compare(long[] a, int aFromIndex, int aToIndex, long[] b, int bFromIndex, int bToIndex)
  {
    int result = Arrays.compare(a, aFromIndex, aToIndex, b, bFromIndex, bToIndex);
    return result;
  }

  /**
   * Example call to new method {@link Arrays#compare}
   * @since 9
   * @see Arrays#compare
   */
  public static int compare(float[] a, int aFromIndex, int aToIndex, float[] b, int bFromIndex, int bToIndex)
  {
    int result = Arrays.compare(a, aFromIndex, aToIndex, b, bFromIndex, bToIndex);
    return result;
  }

  /**
   * Example call to new method {@link Arrays#compare}
   * @since 9
   * @see Arrays#compare
   */
  public static int compare(double[] a, double[] b)
  {
    int result = Arrays.compare(a, b);
    return result;
  }

  /**
   * Example call to new method {@link Arrays#compare}
   * @since 9
   * @see Arrays#compare
   */
  public static <T extends Comparable<? super T>> int compare(T[] a, T[] b)
  {
    int result = Arrays.compare(a, b);
    return result;
  }

  /**
   * Example call to new method {@link Arrays#compare}
   * @since 9
   * @see Arrays#compare
   */
  public static int compare(short[] a, short[] b)
  {
    int result = Arrays.compare(a, b);
    return result;
  }

  /**
   * Example call to new method {@link Arrays#compare}
   * @since 9
   * @see Arrays#compare
   */
  public static <T extends Comparable<? super T>> int compare(T[] a, int aFromIndex, int aToIndex, T[] b, int bFromIndex, int bToIndex)
  {
    int result = Arrays.compare(a, aFromIndex, aToIndex, b, bFromIndex, bToIndex);
    return result;
  }

  /**
   * Example call to new method {@link Arrays#compare}
   * @since 9
   * @see Arrays#compare
   */
  public static int compare(float[] a, float[] b)
  {
    int result = Arrays.compare(a, b);
    return result;
  }

  /**
   * Example call to new method {@link Arrays#compare}
   * @since 9
   * @see Arrays#compare
   */
  public static <T> int compare(T[] a, int aFromIndex, int aToIndex, T[] b, int bFromIndex, int bToIndex, Comparator<? super T> cmp)
  {
    int result = Arrays.compare(a, aFromIndex, aToIndex, b, bFromIndex, bToIndex, cmp);
    return result;
  }

  /**
   * Example call to new method {@link Arrays#compare}
   * @since 9
   * @see Arrays#compare
   */
  public static int compare(short[] a, int aFromIndex, int aToIndex, short[] b, int bFromIndex, int bToIndex)
  {
    int result = Arrays.compare(a, aFromIndex, aToIndex, b, bFromIndex, bToIndex);
    return result;
  }

  /**
   * Example call to new method {@link Arrays#compare}
   * @since 9
   * @see Arrays#compare
   */
  public static <T> int compare(T[] a, T[] b, Comparator<? super T> cmp)
  {
    int result = Arrays.compare(a, b, cmp);
    return result;
  }

  /**
   * Example call to new method {@link Arrays#compare}
   * @since 9
   * @see Arrays#compare
   */
  public static int compare(char[] a, int aFromIndex, int aToIndex, char[] b, int bFromIndex, int bToIndex)
  {
    int result = Arrays.compare(a, aFromIndex, aToIndex, b, bFromIndex, bToIndex);
    return result;
  }

  /**
   * Example call to new method {@link Arrays#compare}
   * @since 9
   * @see Arrays#compare
   */
  public static int compare(double[] a, int aFromIndex, int aToIndex, double[] b, int bFromIndex, int bToIndex)
  {
    int result = Arrays.compare(a, aFromIndex, aToIndex, b, bFromIndex, bToIndex);
    return result;
  }

  /**
   * Example call to new method {@link Arrays#compare}
   * @since 9
   * @see Arrays#compare
   */
  public static int compare(int[] a, int[] b)
  {
    int result = Arrays.compare(a, b);
    return result;
  }

  /**
   * Example call to new method {@link Arrays#equals}
   * @since 9
   * @see Arrays#equals
   */
  public static boolean equals(short[] a, int aFromIndex, int aToIndex, short[] b, int bFromIndex, int bToIndex)
  {
    boolean result = Arrays.equals(a, aFromIndex, aToIndex, b, bFromIndex, bToIndex);
    return result;
  }

  /**
   * Example call to new method {@link Arrays#equals}
   * @since 9
   * @see Arrays#equals
   */
  public static boolean equals(long[] a, int aFromIndex, int aToIndex, long[] b, int bFromIndex, int bToIndex)
  {
    boolean result = Arrays.equals(a, aFromIndex, aToIndex, b, bFromIndex, bToIndex);
    return result;
  }

  /**
   * Example call to new method {@link Arrays#equals}
   * @since 9
   * @see Arrays#equals
   */
  public static boolean equals(int[] a, int aFromIndex, int aToIndex, int[] b, int bFromIndex, int bToIndex)
  {
    boolean result = Arrays.equals(a, aFromIndex, aToIndex, b, bFromIndex, bToIndex);
    return result;
  }

  /**
   * Example call to new method {@link Arrays#equals}
   * @since 9
   * @see Arrays#equals
   */
  public static boolean equals(char[] a, int aFromIndex, int aToIndex, char[] b, int bFromIndex, int bToIndex)
  {
    boolean result = Arrays.equals(a, aFromIndex, aToIndex, b, bFromIndex, bToIndex);
    return result;
  }

  /**
   * Example call to new method {@link Arrays#mismatch}
   * @since 9
   * @see Arrays#mismatch
   */
  public static int mismatch(char[] a, char[] b)
  {
    int result = Arrays.mismatch(a, b);
    return result;
  }

  /**
   * Example call to new method {@link Arrays#mismatch}
   * @since 9
   * @see Arrays#mismatch
   */
  public static int mismatch(char[] a, int aFromIndex, int aToIndex, char[] b, int bFromIndex, int bToIndex)
  {
    int result = Arrays.mismatch(a, aFromIndex, aToIndex, b, bFromIndex, bToIndex);
    return result;
  }

  /**
   * Example call to new method {@link Arrays#mismatch}
   * @since 9
   * @see Arrays#mismatch
   */
  public static int mismatch(long[] a, int aFromIndex, int aToIndex, long[] b, int bFromIndex, int bToIndex)
  {
    int result = Arrays.mismatch(a, aFromIndex, aToIndex, b, bFromIndex, bToIndex);
    return result;
  }

  /**
   * Example call to new method {@link Arrays#mismatch}
   * @since 9
   * @see Arrays#mismatch
   */
  public static int mismatch(double[] a, double[] b)
  {
    int result = Arrays.mismatch(a, b);
    return result;
  }

  /**
   * Example call to new method {@link Arrays#mismatch}
   * @since 9
   * @see Arrays#mismatch
   */
  public static int mismatch(float[] a, int aFromIndex, int aToIndex, float[] b, int bFromIndex, int bToIndex)
  {
    int result = Arrays.mismatch(a, aFromIndex, aToIndex, b, bFromIndex, bToIndex);
    return result;
  }

  /**
   * Example call to new method {@link Arrays#mismatch}
   * @since 9
   * @see Arrays#mismatch
   */
  public static int mismatch(long[] a, long[] b)
  {
    int result = Arrays.mismatch(a, b);
    return result;
  }

  /**
   * Example call to new method {@link Arrays#mismatch}
   * @since 9
   * @see Arrays#mismatch
   */
  public static int mismatch(float[] a, float[] b)
  {
    int result = Arrays.mismatch(a, b);
    return result;
  }

  /**
   * Example call to new method {@link Arrays#mismatch}
   * @since 9
   * @see Arrays#mismatch
   */
  public static int mismatch(boolean[] a, boolean[] b)
  {
    int result = Arrays.mismatch(a, b);
    return result;
  }

  /**
   * Example call to new method {@link Arrays#mismatch}
   * @since 9
   * @see Arrays#mismatch
   */
  public static int mismatch(short[] a, int aFromIndex, int aToIndex, short[] b, int bFromIndex, int bToIndex)
  {
    int result = Arrays.mismatch(a, aFromIndex, aToIndex, b, bFromIndex, bToIndex);
    return result;
  }

  /**
   * Example call to new method {@link Arrays#mismatch}
   * @since 9
   * @see Arrays#mismatch
   */
  public static <T> int mismatch(T[] a, T[] b, Comparator<? super T> cmp)
  {
    int result = Arrays.mismatch(a, b, cmp);
    return result;
  }

  /**
   * Example call to new method {@link Arrays#mismatch}
   * @since 9
   * @see Arrays#mismatch
   */
  public static int mismatch(byte[] a, byte[] b)
  {
    int result = Arrays.mismatch(a, b);
    return result;
  }

  /**
   * Example call to new method {@link Arrays#mismatch}
   * @since 9
   * @see Arrays#mismatch
   */
  public static int mismatch(byte[] a, int aFromIndex, int aToIndex, byte[] b, int bFromIndex, int bToIndex)
  {
    int result = Arrays.mismatch(a, aFromIndex, aToIndex, b, bFromIndex, bToIndex);
    return result;
  }

  /**
   * Example call to new method {@link Arrays#mismatch}
   * @since 9
   * @see Arrays#mismatch
   */
  public static int mismatch(Object[] a, int aFromIndex, int aToIndex, Object[] b, int bFromIndex, int bToIndex)
  {
    int result = Arrays.mismatch(a, aFromIndex, aToIndex, b, bFromIndex, bToIndex);
    return result;
  }

  /**
   * Example call to new method {@link Arrays#mismatch}
   * @since 9
   * @see Arrays#mismatch
   */
  public static int mismatch(int[] a, int aFromIndex, int aToIndex, int[] b, int bFromIndex, int bToIndex)
  {
    int result = Arrays.mismatch(a, aFromIndex, aToIndex, b, bFromIndex, bToIndex);
    return result;
  }

  /**
   * Example call to new method {@link Arrays#mismatch}
   * @since 9
   * @see Arrays#mismatch
   */
  public static int mismatch(short[] a, short[] b)
  {
    int result = Arrays.mismatch(a, b);
    return result;
  }

  /**
   * Example call to new method {@link Arrays#mismatch}
   * @since 9
   * @see Arrays#mismatch
   */
  public static int mismatch(int[] a, int[] b)
  {
    int result = Arrays.mismatch(a, b);
    return result;
  }

  /**
   * Example call to new method {@link Arrays#mismatch}
   * @since 9
   * @see Arrays#mismatch
   */
  public static int mismatch(double[] a, int aFromIndex, int aToIndex, double[] b, int bFromIndex, int bToIndex)
  {
    int result = Arrays.mismatch(a, aFromIndex, aToIndex, b, bFromIndex, bToIndex);
    return result;
  }

  /**
   * Example call to new method {@link Arrays#mismatch}
   * @since 9
   * @see Arrays#mismatch
   */
  public static int mismatch(Object[] a, Object[] b)
  {
    int result = Arrays.mismatch(a, b);
    return result;
  }

  /**
   * Example call to new method {@link Arrays#mismatch}
   * @since 9
   * @see Arrays#mismatch
   */
  public static int mismatch(boolean[] a, int aFromIndex, int aToIndex, boolean[] b, int bFromIndex, int bToIndex)
  {
    int result = Arrays.mismatch(a, aFromIndex, aToIndex, b, bFromIndex, bToIndex);
    return result;
  }

  /**
   * Example call to new method {@link Arrays#equals}
   * @since 9
   * @see Arrays#equals
   */
  public static boolean equals(byte[] a, int aFromIndex, int aToIndex, byte[] b, int bFromIndex, int bToIndex)
  {
    boolean result = Arrays.equals(a, aFromIndex, aToIndex, b, bFromIndex, bToIndex);
    return result;
  }

  /**
   * Example call to new method {@link Arrays#equals}
   * @since 9
   * @see Arrays#equals
   */
  public static boolean equals(boolean[] a, int aFromIndex, int aToIndex, boolean[] b, int bFromIndex, int bToIndex)
  {
    boolean result = Arrays.equals(a, aFromIndex, aToIndex, b, bFromIndex, bToIndex);
    return result;
  }

  /**
   * Example call to new method {@link Arrays#equals}
   * @since 9
   * @see Arrays#equals
   */
  public static boolean equals(double[] a, int aFromIndex, int aToIndex, double[] b, int bFromIndex, int bToIndex)
  {
    boolean result = Arrays.equals(a, aFromIndex, aToIndex, b, bFromIndex, bToIndex);
    return result;
  }

  /**
   * Example call to new method {@link Arrays#equals}
   * @since 9
   * @see Arrays#equals
   */
  public static <T> boolean equals(T[] a, int aFromIndex, int aToIndex, T[] b, int bFromIndex, int bToIndex, Comparator<? super T> cmp)
  {
    boolean result = Arrays.equals(a, aFromIndex, aToIndex, b, bFromIndex, bToIndex, cmp);
    return result;
  }

  /**
   * Example call to new method {@link Arrays#equals}
   * @since 9
   * @see Arrays#equals
   */
  public static boolean equals(float[] a, int aFromIndex, int aToIndex, float[] b, int bFromIndex, int bToIndex)
  {
    boolean result = Arrays.equals(a, aFromIndex, aToIndex, b, bFromIndex, bToIndex);
    return result;
  }

  /**
   * Example call to new method {@link Arrays#equals}
   * @since 9
   * @see Arrays#equals
   */
  public static <T> boolean equals(T[] a, T[] a2, Comparator<? super T> cmp)
  {
    boolean result = Arrays.equals(a, a2, cmp);
    return result;
  }

  /**
   * Example call to new method {@link Arrays#equals}
   * @since 9
   * @see Arrays#equals
   */
  public static boolean equals(Object[] a, int aFromIndex, int aToIndex, Object[] b, int bFromIndex, int bToIndex)
  {
    boolean result = Arrays.equals(a, aFromIndex, aToIndex, b, bFromIndex, bToIndex);
    return result;
  }

}
