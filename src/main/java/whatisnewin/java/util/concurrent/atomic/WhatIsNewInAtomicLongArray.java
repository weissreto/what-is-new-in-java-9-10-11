package whatisnewin.java.util.concurrent.atomic;

import java.util.concurrent.atomic.AtomicLongArray;

/**
 * This source file was generated by WhatIsNewInJava.<br>
 *
 * This class provides an example call to each method in class {@link AtomicLongArray}
 * that were newly introduced in Java versions 9, 10, 11.<br>
 *
 * {@link AtomicLongArray} is an old class but has new fields, constructors or methods.
 * @since 1.5
 * @see AtomicLongArray
 */
public final class WhatIsNewInAtomicLongArray
{
  /**
   * Example call to new method {@link AtomicLongArray#weakCompareAndSetPlain(int, long, long)}.
   * @since 9
   * @see AtomicLongArray#weakCompareAndSetPlain(int, long, long)
   */
  public boolean weakCompareAndSetPlain(int i, long expectedValue, long newValue)
  {
    AtomicLongArray testee = $$$();

    boolean result = testee.weakCompareAndSetPlain(i, expectedValue, newValue);
    return result;
  }

  /**
   * Example call to new method {@link AtomicLongArray#getPlain(int)}.
   * @since 9
   * @see AtomicLongArray#getPlain(int)
   */
  public long getPlain(int i)
  {
    AtomicLongArray testee = $$$();

    long result = testee.getPlain(i);
    return result;
  }

  /**
   * Example call to new method {@link AtomicLongArray#setPlain(int, long)}.
   * @since 9
   * @see AtomicLongArray#setPlain(int, long)
   */
  public void setPlain(int i, long newValue)
  {
    AtomicLongArray testee = $$$();

    testee.setPlain(i, newValue);
  }

  /**
   * Example call to new method {@link AtomicLongArray#getOpaque(int)}.
   * @since 9
   * @see AtomicLongArray#getOpaque(int)
   */
  public long getOpaque(int i)
  {
    AtomicLongArray testee = $$$();

    long result = testee.getOpaque(i);
    return result;
  }

  /**
   * Example call to new method {@link AtomicLongArray#setOpaque(int, long)}.
   * @since 9
   * @see AtomicLongArray#setOpaque(int, long)
   */
  public void setOpaque(int i, long newValue)
  {
    AtomicLongArray testee = $$$();

    testee.setOpaque(i, newValue);
  }

  /**
   * Example call to new method {@link AtomicLongArray#getAcquire(int)}.
   * @since 9
   * @see AtomicLongArray#getAcquire(int)
   */
  public long getAcquire(int i)
  {
    AtomicLongArray testee = $$$();

    long result = testee.getAcquire(i);
    return result;
  }

  /**
   * Example call to new method {@link AtomicLongArray#setRelease(int, long)}.
   * @since 9
   * @see AtomicLongArray#setRelease(int, long)
   */
  public void setRelease(int i, long newValue)
  {
    AtomicLongArray testee = $$$();

    testee.setRelease(i, newValue);
  }

  /**
   * Example call to new method {@link AtomicLongArray#compareAndExchange(int, long, long)}.
   * @since 9
   * @see AtomicLongArray#compareAndExchange(int, long, long)
   */
  public long compareAndExchange(int i, long expectedValue, long newValue)
  {
    AtomicLongArray testee = $$$();

    long result = testee.compareAndExchange(i, expectedValue, newValue);
    return result;
  }

  /**
   * Example call to new method {@link AtomicLongArray#compareAndExchangeAcquire(int, long, long)}.
   * @since 9
   * @see AtomicLongArray#compareAndExchangeAcquire(int, long, long)
   */
  public long compareAndExchangeAcquire(int i, long expectedValue, long newValue)
  {
    AtomicLongArray testee = $$$();

    long result = testee.compareAndExchangeAcquire(i, expectedValue, newValue);
    return result;
  }

  /**
   * Example call to new method {@link AtomicLongArray#compareAndExchangeRelease(int, long, long)}.
   * @since 9
   * @see AtomicLongArray#compareAndExchangeRelease(int, long, long)
   */
  public long compareAndExchangeRelease(int i, long expectedValue, long newValue)
  {
    AtomicLongArray testee = $$$();

    long result = testee.compareAndExchangeRelease(i, expectedValue, newValue);
    return result;
  }

  /**
   * Example call to new method {@link AtomicLongArray#weakCompareAndSetVolatile(int, long, long)}.
   * @since 9
   * @see AtomicLongArray#weakCompareAndSetVolatile(int, long, long)
   */
  public boolean weakCompareAndSetVolatile(int i, long expectedValue, long newValue)
  {
    AtomicLongArray testee = $$$();

    boolean result = testee.weakCompareAndSetVolatile(i, expectedValue, newValue);
    return result;
  }

  /**
   * Example call to new method {@link AtomicLongArray#weakCompareAndSetAcquire(int, long, long)}.
   * @since 9
   * @see AtomicLongArray#weakCompareAndSetAcquire(int, long, long)
   */
  public boolean weakCompareAndSetAcquire(int i, long expectedValue, long newValue)
  {
    AtomicLongArray testee = $$$();

    boolean result = testee.weakCompareAndSetAcquire(i, expectedValue, newValue);
    return result;
  }

  /**
   * Example call to new method {@link AtomicLongArray#weakCompareAndSetRelease(int, long, long)}.
   * @since 9
   * @see AtomicLongArray#weakCompareAndSetRelease(int, long, long)
   */
  public boolean weakCompareAndSetRelease(int i, long expectedValue, long newValue)
  {
    AtomicLongArray testee = $$$();

    boolean result = testee.weakCompareAndSetRelease(i, expectedValue, newValue);
    return result;
  }

  private AtomicLongArray $$$()
  {
    return null;
  }
}
