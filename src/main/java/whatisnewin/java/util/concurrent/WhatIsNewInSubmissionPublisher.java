package whatisnewin.java.util.concurrent;

import java.util.concurrent.SubmissionPublisher;
import java.util.concurrent.Executor;
import java.util.function.BiConsumer;
import java.util.concurrent.Flow.Subscriber;
import java.util.function.BiPredicate;
import java.util.concurrent.TimeUnit;
import java.util.List;
import java.util.concurrent.CompletableFuture;
import java.util.function.Consumer;

/**
 * This source file was generated by WhatIsNewInJava.<br>
 *
 * This class provides an example call to each method in class {@link SubmissionPublisher}
 * that were newly introduced in Java versions 9, 10, 11.<br>
 *
 * {@link SubmissionPublisher} is a completely new class.
 * @since 9
 * @see SubmissionPublisher
 */
public final class WhatIsNewInSubmissionPublisher<T>
{
  /**
   * Example call to new constructor {@link SubmissionPublisher#SubmissionPublisher(Executor, int, BiConsumer)}.
   * @since 9
   * @see SubmissionPublisher#SubmissionPublisher(Executor, int, BiConsumer)
   */
  public WhatIsNewInSubmissionPublisher(Executor executor, int maxBufferCapacity, BiConsumer<? super Subscriber<? super T>, ? super Throwable> handler)
  {
    SubmissionPublisher<T> testee = new SubmissionPublisher<>(executor, maxBufferCapacity, handler);
  }

  /**
   * Example call to new constructor {@link SubmissionPublisher#SubmissionPublisher(Executor, int)}.
   * @since 9
   * @see SubmissionPublisher#SubmissionPublisher(Executor, int)
   */
  public WhatIsNewInSubmissionPublisher(Executor executor, int maxBufferCapacity)
  {
    SubmissionPublisher<T> testee = new SubmissionPublisher<>(executor, maxBufferCapacity);
  }

  /**
   * Example call to new constructor {@link SubmissionPublisher#SubmissionPublisher()}.
   * @since 9
   * @see SubmissionPublisher#SubmissionPublisher()
   */
  public WhatIsNewInSubmissionPublisher()
  {
    SubmissionPublisher<T> testee = new SubmissionPublisher<>();
  }

  /**
   * Example call to new method {@link SubmissionPublisher#subscribe(Subscriber)}.
   * @since 9
   * @see SubmissionPublisher#subscribe(Subscriber)
   */
  public void subscribe(Subscriber<? super T> subscriber)
  {
    SubmissionPublisher<T> testee = $$$();

    testee.subscribe(subscriber);
  }

  /**
   * Example call to new method {@link SubmissionPublisher#submit(Object)}.
   * @since 9
   * @see SubmissionPublisher#submit(Object)
   */
  public int submit(T item)
  {
    SubmissionPublisher<T> testee = $$$();

    int result = testee.submit(item);
    return result;
  }

  /**
   * Example call to new method {@link SubmissionPublisher#offer(Object, BiPredicate)}.
   * @since 9
   * @see SubmissionPublisher#offer(Object, BiPredicate)
   */
  public int offer(T item, BiPredicate<Subscriber<? super T>, ? super T> onDrop)
  {
    SubmissionPublisher<T> testee = $$$();

    int result = testee.offer(item, onDrop);
    return result;
  }

  /**
   * Example call to new method {@link SubmissionPublisher#offer(Object, long, TimeUnit, BiPredicate)}.
   * @since 9
   * @see SubmissionPublisher#offer(Object, long, TimeUnit, BiPredicate)
   */
  public int offer(T item, long timeout, TimeUnit unit, BiPredicate<Subscriber<? super T>, ? super T> onDrop)
  {
    SubmissionPublisher<T> testee = $$$();

    int result = testee.offer(item, timeout, unit, onDrop);
    return result;
  }

  /**
   * Example call to new method {@link SubmissionPublisher#close()}.
   * @since 9
   * @see SubmissionPublisher#close()
   */
  public void close()
  {
    SubmissionPublisher<T> testee = $$$();

    testee.close();
  }

  /**
   * Example call to new method {@link SubmissionPublisher#closeExceptionally(Throwable)}.
   * @since 9
   * @see SubmissionPublisher#closeExceptionally(Throwable)
   */
  public void closeExceptionally(Throwable error)
  {
    SubmissionPublisher<T> testee = $$$();

    testee.closeExceptionally(error);
  }

  /**
   * Example call to new method {@link SubmissionPublisher#isClosed()}.
   * @since 9
   * @see SubmissionPublisher#isClosed()
   */
  public boolean isClosed()
  {
    SubmissionPublisher<T> testee = $$$();

    boolean result = testee.isClosed();
    return result;
  }

  /**
   * Example call to new method {@link SubmissionPublisher#getClosedException()}.
   * @since 9
   * @see SubmissionPublisher#getClosedException()
   */
  public Throwable getClosedException()
  {
    SubmissionPublisher<T> testee = $$$();

    Throwable result = testee.getClosedException();
    return result;
  }

  /**
   * Example call to new method {@link SubmissionPublisher#hasSubscribers()}.
   * @since 9
   * @see SubmissionPublisher#hasSubscribers()
   */
  public boolean hasSubscribers()
  {
    SubmissionPublisher<T> testee = $$$();

    boolean result = testee.hasSubscribers();
    return result;
  }

  /**
   * Example call to new method {@link SubmissionPublisher#getNumberOfSubscribers()}.
   * @since 9
   * @see SubmissionPublisher#getNumberOfSubscribers()
   */
  public int getNumberOfSubscribers()
  {
    SubmissionPublisher<T> testee = $$$();

    int result = testee.getNumberOfSubscribers();
    return result;
  }

  /**
   * Example call to new method {@link SubmissionPublisher#getExecutor()}.
   * @since 9
   * @see SubmissionPublisher#getExecutor()
   */
  public Executor getExecutor()
  {
    SubmissionPublisher<T> testee = $$$();

    Executor result = testee.getExecutor();
    return result;
  }

  /**
   * Example call to new method {@link SubmissionPublisher#getMaxBufferCapacity()}.
   * @since 9
   * @see SubmissionPublisher#getMaxBufferCapacity()
   */
  public int getMaxBufferCapacity()
  {
    SubmissionPublisher<T> testee = $$$();

    int result = testee.getMaxBufferCapacity();
    return result;
  }

  /**
   * Example call to new method {@link SubmissionPublisher#getSubscribers()}.
   * @since 9
   * @see SubmissionPublisher#getSubscribers()
   */
  public List<Subscriber<? super T>> getSubscribers()
  {
    SubmissionPublisher<T> testee = $$$();

    List<Subscriber<? super T>> result = testee.getSubscribers();
    return result;
  }

  /**
   * Example call to new method {@link SubmissionPublisher#isSubscribed(Subscriber)}.
   * @since 9
   * @see SubmissionPublisher#isSubscribed(Subscriber)
   */
  public boolean isSubscribed(Subscriber<? super T> subscriber)
  {
    SubmissionPublisher<T> testee = $$$();

    boolean result = testee.isSubscribed(subscriber);
    return result;
  }

  /**
   * Example call to new method {@link SubmissionPublisher#estimateMinimumDemand()}.
   * @since 9
   * @see SubmissionPublisher#estimateMinimumDemand()
   */
  public long estimateMinimumDemand()
  {
    SubmissionPublisher<T> testee = $$$();

    long result = testee.estimateMinimumDemand();
    return result;
  }

  /**
   * Example call to new method {@link SubmissionPublisher#estimateMaximumLag()}.
   * @since 9
   * @see SubmissionPublisher#estimateMaximumLag()
   */
  public int estimateMaximumLag()
  {
    SubmissionPublisher<T> testee = $$$();

    int result = testee.estimateMaximumLag();
    return result;
  }

  /**
   * Example call to new method {@link SubmissionPublisher#consume(Consumer)}.
   * @since 9
   * @see SubmissionPublisher#consume(Consumer)
   */
  public CompletableFuture<Void> consume(Consumer<? super T> consumer)
  {
    SubmissionPublisher<T> testee = $$$();

    CompletableFuture<Void> result = testee.consume(consumer);
    return result;
  }

  private SubmissionPublisher<T> $$$()
  {
    return null;
  }
}
