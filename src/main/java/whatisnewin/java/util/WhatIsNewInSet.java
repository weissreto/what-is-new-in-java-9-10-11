package whatisnewin.java.util;

import java.util.Set;

/**
 * This source file was generated by WhatIsNewInJava<br>
 *
 * This class provides an example call to each method in class {@link Set}
 * that were newly introduced in Java versions 9, 10, 11.<br>
 *
 * {@link Set} is an old class but has new fields, constructors or methods
 * @since 1.2
 * @see Set
 */
public final class WhatIsNewInSet<E>
{
  /**
   * Example call to new method {@link Set#of}
   * @since 9
   * @see Set#of
   */
  public static <E> Set<E> of(E e1, E e2, E e3, E e4)
  {
    Set<E> result = Set.of(e1, e2, e3, e4);
    return result;
  }

  /**
   * Example call to new method {@link Set#of}
   * @since 9
   * @see Set#of
   */
  public static <E> Set<E> of(E e1, E e2)
  {
    Set<E> result = Set.of(e1, e2);
    return result;
  }

  /**
   * Example call to new method {@link Set#of}
   * @since 9
   * @see Set#of
   */
  public static <E> Set<E> of()
  {
    Set<E> result = Set.of();
    return result;
  }

  /**
   * Example call to new method {@link Set#of}
   * @since 9
   * @see Set#of
   */
  public static <E> Set<E> of(E e1)
  {
    Set<E> result = Set.of(e1);
    return result;
  }

  /**
   * Example call to new method {@link Set#of}
   * @since 9
   * @see Set#of
   */
  public static <E> Set<E> of(E e1, E e2, E e3)
  {
    Set<E> result = Set.of(e1, e2, e3);
    return result;
  }

  /**
   * Example call to new method {@link Set#of}
   * @since 9
   * @see Set#of
   */
  public static <E> Set<E> of(E[] elements)
  {
    Set<E> result = Set.of(elements);
    return result;
  }

  /**
   * Example call to new method {@link Set#of}
   * @since 9
   * @see Set#of
   */
  public static <E> Set<E> of(E e1, E e2, E e3, E e4, E e5)
  {
    Set<E> result = Set.of(e1, e2, e3, e4, e5);
    return result;
  }

  /**
   * Example call to new method {@link Set#of}
   * @since 9
   * @see Set#of
   */
  public static <E> Set<E> of(E e1, E e2, E e3, E e4, E e5, E e6)
  {
    Set<E> result = Set.of(e1, e2, e3, e4, e5, e6);
    return result;
  }

  /**
   * Example call to new method {@link Set#of}
   * @since 9
   * @see Set#of
   */
  public static <E> Set<E> of(E e1, E e2, E e3, E e4, E e5, E e6, E e7)
  {
    Set<E> result = Set.of(e1, e2, e3, e4, e5, e6, e7);
    return result;
  }

  /**
   * Example call to new method {@link Set#of}
   * @since 9
   * @see Set#of
   */
  public static <E> Set<E> of(E e1, E e2, E e3, E e4, E e5, E e6, E e7, E e8)
  {
    Set<E> result = Set.of(e1, e2, e3, e4, e5, e6, e7, e8);
    return result;
  }

  /**
   * Example call to new method {@link Set#of}
   * @since 9
   * @see Set#of
   */
  public static <E> Set<E> of(E e1, E e2, E e3, E e4, E e5, E e6, E e7, E e8, E e9)
  {
    Set<E> result = Set.of(e1, e2, e3, e4, e5, e6, e7, e8, e9);
    return result;
  }

  /**
   * Example call to new method {@link Set#of}
   * @since 9
   * @see Set#of
   */
  public static <E> Set<E> of(E e1, E e2, E e3, E e4, E e5, E e6, E e7, E e8, E e9, E e10)
  {
    Set<E> result = Set.of(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10);
    return result;
  }

}
