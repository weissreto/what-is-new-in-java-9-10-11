package whatisnewin.java.sql;

import java.sql.Connection;
import java.sql.SQLException;
import java.sql.ShardingKey;

/**
 * This source file was generated by WhatIsNewInJava<br>
 *
 * This class provides an example call to each method in class {@link Connection}
 * that were newly introduced in Java versions 9, 10, 11.<br>
 *
 * {@link Connection} is an old class but has new fields, constructors or methods
 * @since 1.1
 * @see Connection
 */
public final class WhatIsNewInConnection
{
  /**
   * Example call to new method {@link Connection#endRequest}
   * @since 9
   * @see Connection#endRequest
   */
  public void endRequest() throws SQLException
  {
    Connection testee = $$$();

    testee.endRequest();
  }

  /**
   * Example call to new method {@link Connection#setShardingKeyIfValid}
   * @since 9
   * @see Connection#setShardingKeyIfValid
   */
  public boolean setShardingKeyIfValid(ShardingKey shardingKey, ShardingKey superShardingKey, int timeout) throws SQLException
  {
    Connection testee = $$$();

    boolean result = testee.setShardingKeyIfValid(shardingKey, superShardingKey, timeout);
    return result;
  }

  /**
   * Example call to new method {@link Connection#setShardingKeyIfValid}
   * @since 9
   * @see Connection#setShardingKeyIfValid
   */
  public boolean setShardingKeyIfValid(ShardingKey shardingKey, int timeout) throws SQLException
  {
    Connection testee = $$$();

    boolean result = testee.setShardingKeyIfValid(shardingKey, timeout);
    return result;
  }

  /**
   * Example call to new method {@link Connection#setShardingKey}
   * @since 9
   * @see Connection#setShardingKey
   */
  public void setShardingKey(ShardingKey shardingKey, ShardingKey superShardingKey) throws SQLException
  {
    Connection testee = $$$();

    testee.setShardingKey(shardingKey, superShardingKey);
  }

  /**
   * Example call to new method {@link Connection#beginRequest}
   * @since 9
   * @see Connection#beginRequest
   */
  public void beginRequest() throws SQLException
  {
    Connection testee = $$$();

    testee.beginRequest();
  }

  private Connection $$$()
  {
    return null;
  }
}
