package whatisnewin.java.lang.module;

import java.lang.module.ModuleDescriptor.Requires;
import java.util.Set;
import java.lang.module.ModuleDescriptor.Requires.Modifier;
import java.util.Optional;
import java.lang.module.ModuleDescriptor.Version;

/**
 * This source file was generated by WhatIsNewInJava.<br>
 *
 * This class provides an example call to each method in class {@link Requires}
 * that were newly introduced in Java versions 9, 10, 11.<br>
 *
 * {@link Requires} is a completely new class.
 * @since 9
 * @see Requires
 */
public final class WhatIsNewInModuleDescriptor$Requires
{
  /**
   * Example call to new method {@link Requires#modifiers()}.
   * @since 9
   * @see Requires#modifiers()
   */
  public Set<Modifier> modifiers()
  {
    Requires testee = $$$();

    Set<Modifier> result = testee.modifiers();
    return result;
  }

  /**
   * Example call to new method {@link Requires#name()}.
   * @since 9
   * @see Requires#name()
   */
  public String name()
  {
    Requires testee = $$$();

    String result = testee.name();
    return result;
  }

  /**
   * Example call to new method {@link Requires#compiledVersion()}.
   * @since 9
   * @see Requires#compiledVersion()
   */
  public Optional<Version> compiledVersion()
  {
    Requires testee = $$$();

    Optional<Version> result = testee.compiledVersion();
    return result;
  }

  /**
   * Example call to new method {@link Requires#rawCompiledVersion()}.
   * @since 9
   * @see Requires#rawCompiledVersion()
   */
  public Optional<String> rawCompiledVersion()
  {
    Requires testee = $$$();

    Optional<String> result = testee.rawCompiledVersion();
    return result;
  }

  /**
   * Example call to new method {@link Requires#compareTo(Requires)}.
   * @since 9
   * @see Requires#compareTo(Requires)
   */
  public int compareTo(Requires that)
  {
    Requires testee = $$$();

    int result = testee.compareTo(that);
    return result;
  }

  private Requires $$$()
  {
    return null;
  }
}
