package whatisnewin.java.lang;


/**
 * This source file was generated by WhatIsNewInJava.<br>
 *
 * This class provides an example call to each method in class {@link Math}
 * that were newly introduced in Java versions 9, 10, 11.<br>
 *
 * {@link Math} is an old class but has new fields, constructors or methods.
 * @since 1.0
 * @see Math
 */
public final class WhatIsNewInMath
{
  /**
   * Example call to new method {@link Math#multiplyExact(long, int)}.
   * @since 9
   * @see Math#multiplyExact(long, int)
   */
  public static long multiplyExact(long x, int y)
  {
    long result = Math.multiplyExact(x, y);
    return result;
  }

  /**
   * Example call to new method {@link Math#multiplyFull(int, int)}.
   * @since 9
   * @see Math#multiplyFull(int, int)
   */
  public static long multiplyFull(int x, int y)
  {
    long result = Math.multiplyFull(x, y);
    return result;
  }

  /**
   * Example call to new method {@link Math#multiplyHigh(long, long)}.
   * @since 9
   * @see Math#multiplyHigh(long, long)
   */
  public static long multiplyHigh(long x, long y)
  {
    long result = Math.multiplyHigh(x, y);
    return result;
  }

  /**
   * Example call to new method {@link Math#floorDiv(long, int)}.
   * @since 9
   * @see Math#floorDiv(long, int)
   */
  public static long floorDiv(long x, int y)
  {
    long result = Math.floorDiv(x, y);
    return result;
  }

  /**
   * Example call to new method {@link Math#floorMod(long, int)}.
   * @since 9
   * @see Math#floorMod(long, int)
   */
  public static int floorMod(long x, int y)
  {
    int result = Math.floorMod(x, y);
    return result;
  }

  /**
   * Example call to new method {@link Math#fma(double, double, double)}.
   * @since 9
   * @see Math#fma(double, double, double)
   */
  public static double fma(double a, double b, double c)
  {
    double result = Math.fma(a, b, c);
    return result;
  }

  /**
   * Example call to new method {@link Math#fma(float, float, float)}.
   * @since 9
   * @see Math#fma(float, float, float)
   */
  public static float fma(float a, float b, float c)
  {
    float result = Math.fma(a, b, c);
    return result;
  }

}
