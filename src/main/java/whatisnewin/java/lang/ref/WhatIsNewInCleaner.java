package whatisnewin.java.lang.ref;

import java.lang.ref.Cleaner;
import java.util.concurrent.ThreadFactory;
import java.lang.ref.Cleaner.Cleanable;

/**
 * This source file was generated by WhatIsNewInJava.<br>
 *
 * This class provides an example call to each method in class {@link Cleaner}
 * that were newly introduced in Java versions 9, 10, 11.<br>
 *
 * {@link Cleaner} is a completely new class.
 * @since 9
 * @see Cleaner
 */
public final class WhatIsNewInCleaner
{
  /**
   * Example call to new method {@link Cleaner#create()}.
   * @since 9
   * @see Cleaner#create()
   */
  public static Cleaner create()
  {
    Cleaner result = Cleaner.create();
    return result;
  }

  /**
   * Example call to new method {@link Cleaner#create(ThreadFactory)}.
   * @since 9
   * @see Cleaner#create(ThreadFactory)
   */
  public static Cleaner create(ThreadFactory threadFactory)
  {
    Cleaner result = Cleaner.create(threadFactory);
    return result;
  }

  /**
   * Example call to new method {@link Cleaner#register(Object, Runnable)}.
   * @since 9
   * @see Cleaner#register(Object, Runnable)
   */
  public Cleanable register(Object obj, Runnable action)
  {
    Cleaner testee = $$$();

    Cleanable result = testee.register(obj, action);
    return result;
  }

  private Cleaner $$$()
  {
    return null;
  }
}
