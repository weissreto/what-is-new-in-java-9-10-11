package whatisnewin.com.sun.source.tree;

import com.sun.source.tree.ModuleTree;
import com.sun.source.tree.ModuleTree.ModuleKind;
import java.util.List;
import com.sun.source.tree.AnnotationTree;
import com.sun.source.tree.ExpressionTree;
import com.sun.source.tree.DirectiveTree;

/**
 * This source file was generated by WhatIsNewInJava.<br>
 *
 * This class provides an example call to each method in class {@link ModuleTree}
 * that were newly introduced in Java versions 9, 10, 11.<br>
 *
 * {@link ModuleTree} is a completely new class.
 * @since 9
 * @see ModuleTree
 */
public final class WhatIsNewInModuleTree
{
  /**
   * Example call to new method {@link ModuleTree#getModuleType()}.
   * @since 9
   * @see ModuleTree#getModuleType()
   */
  public ModuleKind getModuleType()
  {
    ModuleTree testee = $$$();

    ModuleKind result = testee.getModuleType();
    return result;
  }

  /**
   * Example call to new method {@link ModuleTree#getAnnotations()}.
   * @since 9
   * @see ModuleTree#getAnnotations()
   */
  public List<? extends AnnotationTree> getAnnotations()
  {
    ModuleTree testee = $$$();

    List<? extends AnnotationTree> result = testee.getAnnotations();
    return result;
  }

  /**
   * Example call to new method {@link ModuleTree#getName()}.
   * @since 9
   * @see ModuleTree#getName()
   */
  public ExpressionTree getName()
  {
    ModuleTree testee = $$$();

    ExpressionTree result = testee.getName();
    return result;
  }

  /**
   * Example call to new method {@link ModuleTree#getDirectives()}.
   * @since 9
   * @see ModuleTree#getDirectives()
   */
  public List<? extends DirectiveTree> getDirectives()
  {
    ModuleTree testee = $$$();

    List<? extends DirectiveTree> result = testee.getDirectives();
    return result;
  }

  private ModuleTree $$$()
  {
    return null;
  }
}
